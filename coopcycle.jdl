application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName coopcycle
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1649935883595
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.8.1"
    jwtSecretKey "NzM0YTJjODAwZmY5MDYxOWIxMWFjMzI3MjFkMTdjMmI4Y2Y5NzBiZWRkMGRlNzRhZTY4NGRkMDRmZTU4YzUwZWE4ZjJkOGYyNGUxOGMwZjU4NzFmNTBhOTAzNzE3YzhjY2IzODE1ODgwYjUwNDhhODRlNGJlODkwMjE0MjFmOWU="
    languages [fr, zh-cn, en, ja, ko, es]
    messageBroker false
    nativeLanguage fr
    otherModules []
    packageName com.nguyejus.coopcycle
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType no
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities Cooperative, Deliverer, Restaurant, Customer, Product, Order, OrderContent
}

entity Cooperative {
    idCooperative Integer required
    name String
}

entity Deliverer {
    idDelivrer Integer required
    idCooperative Integer
    name String
    surname String
    telephone String minlength(10) maxlength(10) required
    latitude Float required
    longitude Float required
}

entity Restaurant {
    idRestaurant Integer required
    name String
    address String required
    telephone String minlength(10) maxlength(10) required
}

entity Customer {
    idCustomer Integer required
    name String
    surname String
    address String required
    telephone String minlength(10) maxlength(10) required
}

entity Product {
    idProduct Integer required
    idRestaurant Integer required
    name String
    price Float
    disponibility Integer min(0)
}

entity Order {
    idOrder Integer required
    idRestaurant Integer required
    idCustomer Integer required
    state State
    totalprice Float min(5) max(200)  
    date ZonedDateTime
}

entity OrderContent {
    idProduct Integer required
    idOrder Integer required
    quantityAsked Integer
    productAvailable Boolean
}

enum State {
    WAITINGRESTAURANTCONFIRM,
    PREPARING,
    WAITINGDELIVERERACCEPT,
    PICKEDUP,
    ONTHEWAY,
    DELIVERED
}

relationship ManyToMany {
    OrderContent{product required} to Product{ordercontent}
}

relationship OneToMany {
    Deliverer to Order
    Customer to Order
    Cooperative to Deliverer
    Restaurant{order} to Order{restaurant}
    Restaurant{product} to Product{restaurant}
    Order to OrderContent
}


dto Cooperative, Deliverer, Restaurant, Customer, Product, Order, OrderContent with mapstruct
service Cooperative, Deliverer, Restaurant, Customer, Product, Order, OrderContent with serviceClass

